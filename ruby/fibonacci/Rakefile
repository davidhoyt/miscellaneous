
require './lib/version.rb'
class MY_GEM
	module SPECIFICATION
		NAME        = "fibonacci"
		SUMMARY     = "Provides functions for working with Fibonacci sequences."
		
		HOMEPAGE    = "http://github.com/davidhoyt/interviews"
		EMAIL       = "dhoyt@hoytsoft.org"
		AUTHORS     = ["David Hoyt"]
		LICENSE     = "MIT"
		
		DESCRIPTION = SUMMARY + " "
    VERSION     = Fibonacci::VERSION::STRING
  end
end


require 'rubygems'
require 'rake'
require 'rake/clean'
require 'rake/gempackagetask'
require 'rake/rdoctask'
require 'rake/testtask'
require 'jeweler'

spec = Gem::Specification.new do |s|
	s.has_rdoc = true
  s.extra_rdoc_files = ['README.rdoc']
	
  # s.executables = ['your_executable_here']
  s.files = %w(LICENSE.txt) + Dir.glob("{bin,lib}/**/*")
  s.require_path = "lib"
  s.bindir = "bin"
	
	s.version = MY_GEM::SPECIFICATION::VERSION
	
  s.name = MY_GEM::SPECIFICATION::NAME
  s.homepage = MY_GEM::SPECIFICATION::HOMEPAGE
  s.license = MY_GEM::SPECIFICATION::LICENSE
  s.summary = MY_GEM::SPECIFICATION::SUMMARY
  s.email = MY_GEM::SPECIFICATION::EMAIL
  s.authors = MY_GEM::SPECIFICATION::AUTHORS
  s.description = MY_GEM::SPECIFICATION::DESCRIPTION
end

Jeweler::Tasks.new do |gem|
	gem.version = MY_GEM::SPECIFICATION::VERSION
	gem.name = MY_GEM::SPECIFICATION::NAME
  gem.homepage = MY_GEM::SPECIFICATION::HOMEPAGE
  gem.license = MY_GEM::SPECIFICATION::LICENSE
  gem.summary = MY_GEM::SPECIFICATION::SUMMARY
  gem.description = MY_GEM::SPECIFICATION::DESCRIPTION
  gem.email = MY_GEM::SPECIFICATION::EMAIL
  gem.authors = MY_GEM::SPECIFICATION::AUTHORS
end
Jeweler::RubygemsDotOrgTasks.new

Rake::GemPackageTask.new(spec) do |p|
  p.gem_spec = spec
  p.need_tar = true
  p.need_zip = true
end

Rake::RDocTask.new do |rdoc|
  files =['README.rdoc', 'lib/**/*.rb']
  rdoc.rdoc_files.add(files)
  rdoc.main = "README" # page to start on
  rdoc.title = "Fibonacci Docs"
  rdoc.rdoc_dir = 'doc/rdoc' # rdoc output folder
  rdoc.options << '--line-numbers'
end

Rake::TestTask.new do |t|
  t.test_files = FileList['test/**/*.rb']
end

class Rake::Task
	def overwrite(&block)
		@actions.clear
		enhance(&block)
	end
end

#Rake::Task[:build].overwrite do
#	Rake::Task[:clean].invoke
#	Rake::Task[:gem].invoke
#	Rake::Task[:package].invoke
#end

CLEAN.include("pkg")

task :default => [:clean, :repackage]
